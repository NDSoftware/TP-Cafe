{"version":3,"sources":["views/modules/order-management/OrderManagementList.js"],"names":["OrderManagementList","BaseListComponent","constructor","props","super","data","id","orderId","orderDate","customerName","price","columns","name","selector","row","to","className","onClick","this","onClose","accept","setState","visible","state","edit","add","pickUpTime","statusChange","render","xs","pagination","htmlFor","type","required","value","onChange","changeHandler","color","memo"],"mappings":"6KAAA,uEAkBA,MAAMA,UAA4BC,IAChCC,YAAYC,GACVC,MAAMD,GADW,KAWnBE,KAAO,CACL,CACEC,GAAI,EACJC,QAAS,GACTC,UAAW,aACXC,aAAc,UACdC,MAAO,KAET,CACEJ,GAAI,EACJC,QAAS,IACTC,UAAW,aACXC,aAAc,UACdC,MAAO,KAET,CACEJ,GAAI,EACJC,QAAS,IACTC,UAAW,aACXC,aAAc,UACdC,MAAO,MA/BQ,KAmCnBC,QAAU,CACR,CACEC,KAAM,SACNC,SAAUC,GAAOA,EAAIR,IAEvB,CACEM,KAAM,WACNC,SAAUC,GAEN,mCACE,cAAC,IAAD,CAAMC,GAAE,4BAAR,SACGD,EAAIP,aAMf,CACEK,KAAM,aACNC,SAAUC,GAAOA,EAAIN,WAEvB,CACEI,KAAM,gBACNC,SAAUC,GAAOA,EAAIL,cAEvB,CACEG,KAAM,QACNC,SAAUC,GAAOA,EAAIJ,OAEvB,CACEE,KAAM,SACNC,SAAUC,GAEN,qCACE,wBAASE,UAAU,oCAAoCC,QAAS,IAAMC,KAAKC,SAAQ,GAAnF,oBAGA,wBAASH,UAAU,yCAAnB,yBAxES,KAkFnBG,QAAWC,IACTF,KAAKG,SAAS,CACZC,SAAUJ,KAAKK,MAAMD,QACrBF,OAAQA,KAnFVF,KAAKK,MAAQ,CACXD,SAAS,EACTE,MAAM,EACNC,KAAK,EACLC,WAAY,IAEdR,KAAKS,cAAe,EAiFtBC,SACE,OACE,0BAASZ,UAAU,gBAAnB,UACE,cAAC,KAAD,UACE,cAAC,IAAD,CAAMa,GAAI,GAAV,SACE,eAAC,IAAD,CAAOb,UAAU,OAAjB,UACE,eAAC,IAAD,WACE,sDACA,qBAAKA,UAAU,YAAf,SACE,yBAAQA,UAAU,oCAAlB,oBAA6D,mBAAGA,UAAU,6BAG9E,cAAC,IAAD,UACE,cAAC,IAAD,CACEc,YAAU,EACVnB,QAASO,KAAKP,QACdN,KAAMa,KAAKb,gBAMrB,eAAC,KAAD,CAAQiB,QAASJ,KAAKK,MAAMD,QAASH,QAAS,IAAMD,KAAKC,SAAQ,GAAjE,UACE,cAAC,KAAD,UACE,cAAC,KAAD,iCAEF,cAAC,KAAD,UACE,cAAC,IAAD,UACE,sBAAKH,UAAU,OAAf,UACE,cAAC,IAAD,CAAYe,QAAQ,cAApB,gCACA,cAAC,IAAD,CACEC,KAAK,OACLpB,KAAK,cACLN,GAAG,cACH2B,UAAQ,EACRC,MAAOhB,KAAKK,MAAMG,WAClBS,SAAUjB,KAAKkB,uBAKvB,eAAC,KAAD,WACE,cAAC,IAAD,CAASC,MAAM,UAAUrB,UAAU,oBAAoBC,QAAS,IAAMC,KAAKC,SAAQ,GAAnF,kBACA,cAAC,IAAD,CAASkB,MAAM,YAAYrB,UAAU,yBAAyBC,QAAS,IAAMC,KAAKC,SAAQ,GAA1F,8BAQGmB,yBAAKtC","file":"static/js/54.2af3067e.chunk.js","sourcesContent":["import React, {memo} from \"react\";\r\nimport DataTable from 'react-data-table-component';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol, CForm, CFormInput, CFormLabel, CLink,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow\r\n} from \"@coreui/react\";\r\nimport BaseListComponent from \"../../../common/BaseListComponent\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass OrderManagementList extends BaseListComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      edit: false,\r\n      add: false,\r\n      pickUpTime: ''\r\n    }\r\n    this.statusChange = false;\r\n  }\r\n\r\n  data = [\r\n    {\r\n      id: 1,\r\n      orderId: 11,\r\n      orderDate: '22/09/2021',\r\n      customerName: 'Dhairya',\r\n      price: 200\r\n    },\r\n    {\r\n      id: 2,\r\n      orderId: 212,\r\n      orderDate: '22/10/2021',\r\n      customerName: 'Namrata',\r\n      price: 100\r\n    },\r\n    {\r\n      id: 3,\r\n      orderId: 123,\r\n      orderDate: '22/09/2021',\r\n      customerName: 'Dhairya',\r\n      price: 500\r\n    }\r\n  ];\r\n\r\n  columns = [\r\n    {\r\n      name: 'Sr No.',\r\n      selector: row => row.id,\r\n    },\r\n    {\r\n      name: 'Order Id',\r\n      selector: row => {\r\n        return (\r\n          <>\r\n            <Link to={`/order-management/details`} >\r\n              {row.orderId}\r\n            </Link>\r\n          </>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      name: 'Order Date',\r\n      selector: row => row.orderDate,\r\n    },\r\n    {\r\n      name: 'Customer Name',\r\n      selector: row => row.customerName,\r\n    },\r\n    {\r\n      name: 'Price',\r\n      selector: row => row.price,\r\n    },\r\n    {\r\n      name: 'Action',\r\n      selector: row => {\r\n        return (\r\n          <>\r\n            <button  className=\"btn btn-success text-white btn-sm\" onClick={() => this.onClose(true)}>\r\n              Accept\r\n            </button>\r\n            <button  className=\"btn btn-danger text-white  btn-sm mr-2\">\r\n              Reject\r\n            </button>\r\n          </>\r\n        )\r\n      }\r\n    }\r\n  ];\r\n\r\n\r\n  onClose = (accept) => {\r\n    this.setState({\r\n      visible: !this.state.visible,\r\n      accept: accept\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <section className=\"order-section\">\r\n        <CRow>\r\n          <CCol xs={12}>\r\n            <CCard className=\"mb-4\">\r\n              <CCardHeader>\r\n                <strong>Order Management</strong>\r\n                <div className=\"float-end\">\r\n                  <button className=\"btn btn-success text-white btn-sm\">Export <i className=\"fa fa-file-pdf-o\" /></button>\r\n                </div>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <DataTable\r\n                  pagination\r\n                  columns={this.columns}\r\n                  data={this.data}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n        <CModal visible={this.state.visible} onClose={() => this.onClose(false)}>\r\n          <CModalHeader>\r\n            <CModalTitle>Order Management</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <CForm>\r\n              <div className=\"mb-3\">\r\n                <CFormLabel htmlFor=\"pickup-time\">Enter Pick-up Time</CFormLabel>\r\n                <CFormInput\r\n                  type=\"time\"\r\n                  name=\"pickup-time\"\r\n                  id=\"pickup-time\"\r\n                  required\r\n                  value={this.state.pickUpTime}\r\n                  onChange={this.changeHandler}\r\n                />\r\n              </div>\r\n            </CForm>\r\n          </CModalBody>\r\n          <CModalFooter>\r\n            <CButton color=\"success\" className=\"btn-sm text-white\" onClick={() => this.onClose(true)}>Done</CButton>\r\n            <CButton color=\"secondary\" className=\"btn-sm text-white mr-2\" onClick={() => this.onClose(false)}>Cancel</CButton>\r\n          </CModalFooter>\r\n        </CModal>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default memo(OrderManagementList);\r\n"],"sourceRoot":""}