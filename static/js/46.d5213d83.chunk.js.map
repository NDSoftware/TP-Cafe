{"version":3,"sources":["views/components/notifications/toasts/Toasts.js"],"names":["ExampleToast","toast","addToast","useState","toaster","useRef","exampleToast","title","close","className","width","height","xmlns","preserveAspectRatio","focusable","role","fill","onClick","ref","push","placement","Toasts","xs","name","href","autohide","type","color","size","component","CButton","white"],"mappings":"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","file":"static/js/46.d5213d83.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CButton,\r\n  CRow,\r\n  CCol,\r\n  CToast,\r\n  CToastBody,\r\n  CToastClose,\r\n  CToastHeader,\r\n  CToaster,\r\n} from '@coreui/react'\r\nimport { DocsCallout, DocsExample } from 'src/components'\r\n\r\nconst ExampleToast = () => {\r\n  const [toast, addToast] = useState(0)\r\n  const toaster = useRef()\r\n  const exampleToast = (\r\n    <CToast title=\"CoreUI for React.js\">\r\n      <CToastHeader close>\r\n        <svg\r\n          className=\"rounded me-2\"\r\n          width=\"20\"\r\n          height=\"20\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          preserveAspectRatio=\"xMidYMid slice\"\r\n          focusable=\"false\"\r\n          role=\"img\"\r\n        >\r\n          <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\r\n        </svg>\r\n        <strong className=\"me-auto\">CoreUI for React.js</strong>\r\n        <small>7 min ago</small>\r\n      </CToastHeader>\r\n      <CToastBody>Hello, world! This is a toast message.</CToastBody>\r\n    </CToast>\r\n  )\r\n  return (\r\n    <>\r\n      <CButton onClick={() => addToast(exampleToast)}>Send a toast</CButton>\r\n      <CToaster ref={toaster} push={toast} placement=\"top-end\" />\r\n    </>\r\n  )\r\n}\r\n\r\nconst Toasts = () => {\r\n  return (\r\n    <CRow>\r\n      <CCol xs={12}>\r\n        <DocsCallout name=\"Toast\" href=\"components/toast\" />\r\n      </CCol>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>React Toast</strong> <small>Basic</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Toasts are as flexible as you need and have very little required markup. At a minimum,\r\n              we require a single element to contain your “toasted” content and strongly encourage a\r\n              dismiss button.\r\n            </p>\r\n            <DocsExample href=\"components/toast\">\r\n              <CToast title=\"CoreUI for React.js\" autohide={false}>\r\n                <CToastHeader close>\r\n                  <svg\r\n                    className=\"rounded me-2\"\r\n                    width=\"20\"\r\n                    height=\"20\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    preserveAspectRatio=\"xMidYMid slice\"\r\n                    focusable=\"false\"\r\n                    role=\"img\"\r\n                  >\r\n                    <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\r\n                  </svg>\r\n                  <strong className=\"me-auto\">CoreUI for React.js</strong>\r\n                  <small>7 min ago</small>\r\n                </CToastHeader>\r\n                <CToastBody>Hello, world! This is a toast message.</CToastBody>\r\n              </CToast>\r\n            </DocsExample>\r\n            <DocsExample href=\"components/toast\">{ExampleToast()}</DocsExample>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>React Toast</strong> <small>Translucent</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Toasts are slightly translucent to blend in with what&#39;s below them.\r\n            </p>\r\n            <DocsExample href=\"components/toast#translucent\">\r\n              <div className=\"bg-dark p-3\">\r\n                <CToast title=\"CoreUI for React.js\" autohide={false}>\r\n                  <CToastHeader close>\r\n                    <svg\r\n                      className=\"rounded me-2\"\r\n                      width=\"20\"\r\n                      height=\"20\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      preserveAspectRatio=\"xMidYMid slice\"\r\n                      focusable=\"false\"\r\n                      role=\"img\"\r\n                    >\r\n                      <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\r\n                    </svg>\r\n                    <strong className=\"me-auto\">CoreUI for React.js</strong>\r\n                    <small>7 min ago</small>\r\n                  </CToastHeader>\r\n                  <CToastBody>Hello, world! This is a toast message.</CToastBody>\r\n                </CToast>\r\n              </div>\r\n            </DocsExample>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>React Toast</strong> <small>Stacking</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              You can stack toasts by wrapping them in a toast container, which will vertically add\r\n              some spacing.\r\n            </p>\r\n            <DocsExample href=\"components/toast#stacking\">\r\n              <CToaster>\r\n                <CToast title=\"CoreUI for React.js\" autohide={false}>\r\n                  <CToastHeader close>\r\n                    <svg\r\n                      className=\"rounded me-2\"\r\n                      width=\"20\"\r\n                      height=\"20\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      preserveAspectRatio=\"xMidYMid slice\"\r\n                      focusable=\"false\"\r\n                      role=\"img\"\r\n                    >\r\n                      <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\r\n                    </svg>\r\n                    <strong className=\"me-auto\">CoreUI for React.js</strong>\r\n                    <small>7 min ago</small>\r\n                  </CToastHeader>\r\n                  <CToastBody>Hello, world! This is a toast message.</CToastBody>\r\n                </CToast>\r\n                <CToast title=\"CoreUI for React.js\" autohide={false}>\r\n                  <CToastHeader close>\r\n                    <svg\r\n                      className=\"rounded me-2\"\r\n                      width=\"20\"\r\n                      height=\"20\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      preserveAspectRatio=\"xMidYMid slice\"\r\n                      focusable=\"false\"\r\n                      role=\"img\"\r\n                    >\r\n                      <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\r\n                    </svg>\r\n                    <strong className=\"me-auto\">CoreUI for React.js</strong>\r\n                    <small>7 min ago</small>\r\n                  </CToastHeader>\r\n                  <CToastBody>Hello, world! This is a toast message.</CToastBody>\r\n                </CToast>\r\n              </CToaster>\r\n            </DocsExample>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>React Toast</strong> <small>Custom content</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Customize your toasts by removing sub-components, tweaking them with{' '}\r\n              <a href=\"https://coreui.io/docs/4.0/utilities/api\">utilities</a>, or by adding your\r\n              own markup. Here we&#39;ve created a simpler toast by removing the default{' '}\r\n              <code>&lt;CToastHeader&gt;</code>, adding a custom hide icon from{' '}\r\n              <a href=\"https://icons.coreui.io\">CoreUI Icons</a>, and using some{' '}\r\n              <a href=\"https://coreui.io/docs/4.0/utilities/flex\">flexbox utilities</a> to adjust\r\n              the layout.\r\n            </p>\r\n            <DocsExample href=\"components/toast#custom-content\">\r\n              <CToast autohide={false} className=\"align-items-center\">\r\n                <div className=\"d-flex\">\r\n                  <CToastBody>Hello, world! This is a toast message.</CToastBody>\r\n                  <CToastClose className=\"me-2 m-auto\" />\r\n                </div>\r\n              </CToast>\r\n            </DocsExample>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Alternatively, you can also add additional controls and components to toasts.\r\n            </p>\r\n            <DocsExample href=\"components/toast#custom-content\">\r\n              <CToast autohide={false}>\r\n                <CToastBody>\r\n                  Hello, world! This is a toast message.\r\n                  <div className=\"mt-2 pt-2 border-top\">\r\n                    <CButton type=\"button\" color=\"primary\" size=\"sm\">\r\n                      Take action\r\n                    </CButton>\r\n                    <CToastClose component={CButton} color=\"secondary\" size=\"sm\" className=\"ms-1\">\r\n                      Close\r\n                    </CToastClose>\r\n                  </div>\r\n                </CToastBody>\r\n              </CToast>\r\n            </DocsExample>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>React Toast</strong> <small>Custom content</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Building on the above example, you can create different toast color schemes with our{' '}\r\n              <a href=\"https://coreui.io/docs/4.0/utilities/colors\">color</a> and{' '}\r\n              <a href=\"https://coreui.io/docs/4.0//utilities/background\">background</a> utilities.\r\n              Here we&#39;ve set <code>color=&#34;primary&#34;</code> and added{' '}\r\n              <code>.text-white</code> class to the <code>&lt;Ctoast&gt;</code>, and then set{' '}\r\n              <code>white</code> property to our close button. For a crisp edge, we remove the\r\n              default border with <code>.border-0</code>.\r\n            </p>\r\n            <DocsExample href=\"components/toast#color-schemes\">\r\n              <CToast autohide={false} color=\"primary\" className=\"text-white align-items-center\">\r\n                <div className=\"d-flex\">\r\n                  <CToastBody>Hello, world! This is a toast message.</CToastBody>\r\n                  <CToastClose className=\"me-2 m-auto\" white />\r\n                </div>\r\n              </CToast>\r\n            </DocsExample>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Toasts\r\n"],"sourceRoot":""}