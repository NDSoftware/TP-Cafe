{"version":3,"sources":["views/modules/item-management/ItemManagementAddUpdate.js"],"names":["ItemManagementAddUpdate","Component","constructor","Props","super","configConst","AppConstant","categoryList","id","name","year","handleSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","this","setState","validated","changeHandler","ev","value","target","uploadImage","stateName","previewStateName","files","length","arr","state","preview","forEach","fl","fileTypeSupport","includes","type","size","maxFileSize","index","findIndex","el","toLowerCase","splice","toast","error","push","URL","createObjectURL","storeImage","onClickBack","window","history","back","itemName","selectedCategory","originalPrice","itemCode","discountedPrice","todaySpecial","itemDescription","itemTags","itemQuantity","itemImages","previewItemImages","componentDidMount","onRemoveImage","render","className","xs","onClick","noValidate","onSubmit","lg","htmlFor","required","placeholder","onChange","invalid","map","cat","label","defaultChecked","rows","itemTag","multiple","$event","src","alt","defaultImage","color"],"mappings":"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","file":"static/js/51.c877addb.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm, CFormCheck,\r\n  CFormFeedback,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CFormSelect, CFormTextarea,\r\n  CRow\r\n} from \"@coreui/react\";\r\nimport {toast} from \"react-toastify\";\r\nimport AppConstant from \"../../../common/AppConstant\";\r\n\r\nclass ItemManagementAddUpdate extends Component {\r\n  configConst = AppConstant;\r\n  constructor(Props) {\r\n    super(Props);\r\n    this.state = {\r\n      itemName: '',\r\n      selectedCategory: '',\r\n      categoryList: '',\r\n      originalPrice: '',\r\n      itemCode: '',\r\n      discountedPrice: '',\r\n      todaySpecial: '',\r\n      itemDescription: '',\r\n      itemTags: '',\r\n      itemQuantity: '',\r\n      itemImages: [],\r\n      previewItemImages: [],\r\n      validated: false\r\n    }\r\n  }\r\n\r\n  categoryList = [\r\n    {\r\n      id: 1,\r\n      name: 'Beetlejuice',\r\n      year: '1988',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Ghostbusters',\r\n      year: '1984',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Energy Drink',\r\n      year: '1984',\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Soft Drink',\r\n      year: '1984',\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Pizza',\r\n      year: '1984',\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Beverages',\r\n      year: '1984',\r\n    },{\r\n      id: 7,\r\n      name: 'Main Course',\r\n      year: '1984',\r\n    },{\r\n      id: 8,\r\n      name: 'Ghostbusters',\r\n      year: '1984',\r\n    },{\r\n      id: 9,\r\n      name: 'Ghostbusters',\r\n      year: '1984',\r\n    },{\r\n      id: 10,\r\n      name: 'Ghostbusters',\r\n      year: '1984',\r\n    },{\r\n      id: 11,\r\n      name: 'Ghostbusters',\r\n      year: '1984',\r\n    },{\r\n      id: 12,\r\n      name: 'Ghostbusters',\r\n      year: '1984',\r\n    },{\r\n      id: 13,\r\n      name: 'Ghostbusters',\r\n      year: '1984',\r\n    },\r\n  ];\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    const form = event.currentTarget\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault()\r\n      event.stopPropagation()\r\n    }\r\n    this.setState({\r\n      validated: true\r\n    });\r\n  }\r\n\r\n  changeHandler = ev => {\r\n    const {name,value}=ev.target;\r\n    this.setState({[name]:value})\r\n  }\r\n\r\n  /*File Upload Start*/\r\n  uploadImage = (event, stateName, previewStateName) => {\r\n    if (event && event.target && event.target.files && event.target.files.length !== 0) {\r\n      const arr = [...this.state[stateName]];\r\n      const preview = [...this.state[previewStateName]];\r\n      const mainArr = [...event.target.files];\r\n      mainArr.forEach((fl) => {\r\n        if (this.configConst.fileTypeSupport.includes(fl.type)) {\r\n          const size = fl.size / 1024 / 1024;\r\n          if (size > this.configConst.maxFileSize ) {\r\n            const index = arr.findIndex((el) => el.name.toLowerCase() === fl.name.toLowerCase());\r\n            arr.splice(index, 1);\r\n            toast.error('File may not be greater than 1 MB');\r\n          } else {\r\n            arr.push(fl);\r\n            preview.push(URL.createObjectURL(fl));\r\n          }\r\n        } else {\r\n          const index = arr.findIndex((el) => el.name.toLowerCase() === fl.name.toLowerCase());\r\n          arr.splice(index, 1);\r\n          toast.error('Please upload only this file type: jpeg, jpg, png format');\r\n        }\r\n      });\r\n      if (arr.length === 0 && this.state.storeImage.length !== 0){\r\n        return\r\n      }\r\n      this.setState({\r\n        [stateName]: arr,\r\n        [previewStateName]: preview\r\n      });\r\n    }\r\n  }\r\n\r\n  onRemoveImage(index, stateName, previewStateName) {\r\n    const arr = [...this.state[stateName]];\r\n    const preview = [...this.state[previewStateName]];\r\n    arr.splice(index, 1);\r\n    preview.splice(index, 1);\r\n    this.setState({\r\n      [stateName]: arr,\r\n      [previewStateName]: preview\r\n    });\r\n  }\r\n  /*File Upload End*/\r\n\r\n  onClickBack = () => {\r\n    window.history.back();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"store-management-add-update-section\">\r\n        <CRow>\r\n          <CCol xs={12}>\r\n            <CCard className=\"mb-4\">\r\n              <CCardHeader>\r\n                <strong>Create Product</strong>\r\n                <div className=\"float-end\">\r\n                  <button className=\"btn btn-info btn-sm text-white\" onClick={this.onClickBack}>Back</button>\r\n                </div>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <CForm name=\"productManagement\" noValidate\r\n                       validated={this.state.validated}\r\n                       onSubmit={this.handleSubmit}>\r\n                  <CRow>\r\n                    <CCol lg={8}>\r\n                      <CRow>\r\n                        <CCol xs={8} className=\"form-group\">\r\n                          <CFormLabel htmlFor=\"itemName\">Item Name <span className=\"required-mark\"/></CFormLabel>\r\n                          <CFormInput\r\n                            type=\"text\"\r\n                            name=\"itemName\"\r\n                            id=\"itemName\"\r\n                            required\r\n                            placeholder=\"Item Name\"\r\n                            value={this.state.itemName}\r\n                            onChange={this.changeHandler}\r\n                          />\r\n                          <CFormFeedback invalid>Please enter Item name.</CFormFeedback>\r\n                        </CCol>\r\n                        <CCol lg={4} className=\"form-group\">\r\n                          <CFormLabel htmlFor=\"category\">Category <span className=\"required-mark\"/></CFormLabel>\r\n                          <CFormSelect id=\"category\" name=\"category\" onChange={this.changeHandler}>\r\n                            <option>Choose...</option>\r\n                            {this.categoryList && this.categoryList.length !== 0 ?\r\n                              <>\r\n                                { this.categoryList.map((cat, index) => {\r\n                                  return (\r\n                                  <option key={index} value={cat.name}>{cat.name}</option>\r\n                                  )}\r\n                                )}\r\n                              </> :\r\n                              ''\r\n                            }\r\n                          </CFormSelect>\r\n                        </CCol>\r\n                      </CRow>\r\n                      <CRow>\r\n                        <CCol xs={8} className=\"form-group\">\r\n                          <CFormLabel htmlFor=\"originalPrice\">Original Price <span className=\"required-mark\"/></CFormLabel>\r\n                          <CFormInput\r\n                            type=\"text\"\r\n                            name=\"originalPrice\"\r\n                            id=\"originalPrice\"\r\n                            required\r\n                            placeholder=\"Original Price\"\r\n                            value={this.state.originalPrice}\r\n                            onChange={this.changeHandler}\r\n                          />\r\n                          <CFormFeedback invalid>Please enter original price.</CFormFeedback>\r\n                        </CCol>\r\n                        <CCol xs={4} className=\"form-group\">\r\n                          <CFormLabel htmlFor=\"itemCode\">Item Code <span className=\"required-mark\"/></CFormLabel>\r\n                          <CFormInput\r\n                            type=\"text\"\r\n                            name=\"itemCode\"\r\n                            id=\"itemCode\"\r\n                            required\r\n                            placeholder=\"Item Code\"\r\n                            value={this.state.itemCode}\r\n                            onChange={this.changeHandler}\r\n                          />\r\n                          <CFormFeedback invalid>Please enter item code.</CFormFeedback>\r\n                        </CCol>\r\n                      </CRow>\r\n                      <CRow>\r\n                        <CCol xs={8} className=\"form-group\">\r\n                          <CFormLabel htmlFor=\"discountedPrice\">Discounted Price <span className=\"required-mark\"/></CFormLabel>\r\n                          <CFormInput\r\n                            type=\"text\"\r\n                            name=\"discountedPrice\"\r\n                            id=\"discountedPrice\"\r\n                            required\r\n                            placeholder=\"Discounted Price\"\r\n                            value={this.state.discountedPrice}\r\n                            onChange={this.changeHandler}\r\n                          />\r\n                          <CFormFeedback invalid>Please enter discounted price.</CFormFeedback>\r\n                        </CCol>\r\n                        <CCol lg={4} className=\"form-group\">\r\n                          <CFormLabel htmlFor=\"todaySpecial\">Today Special <span className=\"required-mark\"/></CFormLabel>\r\n                          <CFormCheck\r\n                            type=\"radio\"\r\n                            name=\"todaySpecial\"\r\n                            label=\"Yes\"\r\n                            defaultChecked\r\n                          />\r\n                          <CFormCheck\r\n                            type=\"radio\"\r\n                            name=\"todaySpecial\"\r\n                            label=\"No\"\r\n                          />\r\n                        </CCol>\r\n                      </CRow>\r\n                      <CRow>\r\n                        <CCol xs={8} className=\"form-group\">\r\n                          <CFormLabel htmlFor=\"itemDescription\">Item Description <span className=\"required-mark\"/></CFormLabel>\r\n                          <CFormTextarea id=\"itemDescription\" value={this.state.itemDescription}\r\n                                         onChange={this.changeHandler} rows=\"5\">\r\n                          </CFormTextarea>\r\n                          <CFormFeedback invalid>Please enter item description.</CFormFeedback>\r\n                        </CCol>\r\n                        <CCol lg={4} className=\"form-group\">\r\n                          <CRow>\r\n                            <CCol xs={12} className=\"form-group\">\r\n                              <CFormLabel htmlFor=\"itemTag\">Item Tag </CFormLabel>\r\n                              <CFormInput\r\n                                type=\"text\"\r\n                                name=\"itemTag\"\r\n                                id=\"itemTag\"\r\n                                placeholder=\"Item Tag\"\r\n                                value={this.state.itemTag}\r\n                                onChange={this.changeHandler}\r\n                              />\r\n                              <CFormFeedback invalid>Please enter Item tag.</CFormFeedback>\r\n                            </CCol>\r\n                            <CCol xs={12} className=\"form-group\">\r\n                              <CFormLabel htmlFor=\"itemQuantity\">Item Quantity <span className=\"required-mark\"/></CFormLabel>\r\n                              <CFormInput\r\n                                type=\"text\"\r\n                                name=\"itemQuantity\"\r\n                                id=\"itemQuantity\"\r\n                                required\r\n                                placeholder=\"Item Quantity\"\r\n                                value={this.state.itemQuantity}\r\n                                onChange={this.changeHandler}\r\n                              />\r\n                              <CFormFeedback invalid>Please enter Item quantity.</CFormFeedback>\r\n                            </CCol>\r\n                          </CRow>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCol>\r\n                    <CCol lg={4}>\r\n                      <CFormLabel className=\"form-group\" htmlFor=\"itemImages\">Product Image <span className=\"required-mark\"/></CFormLabel>\r\n                      <i className=\"fa fa-upload fa-2x mr-2 image-container-icon\">\r\n                        <CFormInput\r\n                          type=\"file\"\r\n                          name=\"itemImages\"\r\n                          id=\"itemImages\"\r\n                          required\r\n                          multiple\r\n                          placeholder=\"Choose Item Image\"\r\n                          onChange={($event) => this.uploadImage($event, 'itemImages', 'previewItemImages')}\r\n                        />\r\n                      </i>\r\n                      <div className=\"image-container-overflow\" id=\"imageContainer\">\r\n                        {this.state.itemImages && this.state.itemImages.length !== 0 ?\r\n                          <>\r\n                            {\r\n                              this.state.previewItemImages.map((el, index) => {\r\n                                return (\r\n                                  <div key={\"itemImage_\" + index} className=\"position-relative\">\r\n                                    <i className=\"fa fa-times-circle-o\" onClick={() => this.onRemoveImage(index,  'itemImages', 'previewItemImages')}/>\r\n                                    <img src={el} alt=\"product\"/>\r\n                                  </div>\r\n                                )\r\n                              })\r\n                            }\r\n                          </>\r\n                          :\r\n                          <>\r\n                            <img src={this.configConst.defaultImage} alt=\"Choose Product Image\"/>\r\n                          </>\r\n                        }\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12 form-group justify-content-center d-flex\">\r\n                      <CButton color=\"primary\" type=\"submit\">\r\n                        Add\r\n                      </CButton>\r\n                      <CButton color=\"danger mr-2\" className=\"text-white\" onClick={this.onClickBack}>\r\n                        Cancel\r\n                      </CButton>\r\n                    </div>\r\n                  </div>\r\n                </CForm>\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ItemManagementAddUpdate;\r\n"],"sourceRoot":""}