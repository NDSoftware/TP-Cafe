{"version":3,"sources":["views/modules/store-management/StoreManagementList.js"],"names":["StoreManagementList","Component","constructor","props","super","data","id","name","storeStatus","columns","selector","row","to","className","icon","cilPencil","onClose","addEdit","this","setState","visible","state","add","edit","statusChange","render","xs","pagination","htmlFor","type","placeholder","required","color","onClick","memo"],"mappings":"6KAAA,yFAoBA,MAAMA,UAA4BC,YAChCC,YAAYC,GACVC,MAAMD,GADW,KAUnBE,KAAO,CACL,CACEC,GAAI,EACJC,KAAM,cACNC,YAAa,UAEf,CACEF,GAAI,EACJC,KAAM,eACNC,YAAa,UAEf,CACEF,GAAI,EACJC,KAAM,eACNC,YAAa,UAEf,CACEF,GAAI,EACJC,KAAM,aACNC,YAAa,UAEf,CACEF,GAAI,EACJC,KAAM,QACNC,YAAa,UAEf,CACEF,GAAI,EACJC,KAAM,YACNC,YAAa,UACb,CACAF,GAAI,EACJC,KAAM,cACNC,YAAa,YACb,CACAF,GAAI,EACJC,KAAM,eACNC,YAAa,YACb,CACAF,GAAI,EACJC,KAAM,eACNC,YAAa,UACb,CACAF,GAAI,GACJC,KAAM,eACNC,YAAa,UACb,CACAF,GAAI,GACJC,KAAM,eACNC,YAAa,YACb,CACAF,GAAI,GACJC,KAAM,eACNC,YAAa,UACb,CACAF,GAAI,GACJC,KAAM,eACNC,YAAa,aAnEE,KAuEnBC,QAAU,CACR,CACEF,KAAM,SACNG,SAAUC,GAAOA,EAAIL,IAEvB,CACEC,KAAM,aACNG,SAAUC,GAAOA,EAAIJ,MAEvB,CACEA,KAAM,eACNG,SAAUC,GAAOA,EAAIH,aAEvB,CACED,KAAM,SACNG,SAAUC,GAEN,qCACE,cAAC,IAAD,CAAMC,GAAI,yBAA0BC,UAAU,oCAA9C,SAAkF,cAAC,IAAD,CAAOC,KAAMC,IAAWF,UAAU,qBACpH,cAAC,IAAD,SA1FS,KAkGnBG,QAAWC,IACTC,KAAKC,SAAS,CACZC,SAAUF,KAAKG,MAAMD,QACrBE,KAAK,EACLC,MAAM,IAEQ,KAAZN,GAA8B,SAAZA,EACpBC,KAAKC,SAAS,CACZG,KAAK,EACLC,MAAM,IAGRL,KAAKC,SAAS,CACZG,KAAK,EACLC,MAAM,KA9GVL,KAAKG,MAAQ,CACXD,SAAS,EACTG,MAAM,EACND,KAAK,GAEPJ,KAAKM,cAAe,EA8GtBC,SACE,OACE,0BAASZ,UAAU,mBAAnB,UACE,cAAC,KAAD,UACE,cAAC,IAAD,CAAMa,GAAI,GAAV,SACE,eAAC,IAAD,CAAOb,UAAU,OAAjB,UACE,eAAC,IAAD,WACE,sDACA,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,CAAMD,GAAI,wBAAyBC,UAAU,oCAA7C,0BAGJ,cAAC,IAAD,UACE,cAAC,IAAD,CACEc,YAAU,EACVlB,QAASS,KAAKT,QACdJ,KAAMa,KAAKb,gBAMrB,eAAC,KAAD,CAAQe,QAASF,KAAKG,MAAMD,QAASJ,QAAS,IAAME,KAAKF,QAAQ,SAAjE,UACE,cAAC,KAAD,UACE,eAAC,KAAD,WAAcE,KAAKG,MAAMC,IAAM,MAAQ,OAAvC,iBAEF,cAAC,KAAD,UACE,cAAC,IAAD,UACE,sBAAKT,UAAU,OAAf,UACE,cAAC,IAAD,CAAYe,QAAQ,QAApB,2BACA,cAAC,IAAD,CAAYC,KAAK,OAAOvB,GAAG,QAAQwB,YAAY,sBAAsBC,UAAQ,WAInF,cAAC,KAAD,UACE,eAAC,IAAD,CAASC,MAAM,UAAUnB,UAAU,SAASoB,QAAS,IAAMf,KAAKF,QAAQ,QAAxE,UAAkFE,KAAKG,MAAMC,IAAM,MAAQ,OAA3G,gBAQGY,yBAAKlC","file":"static/js/57.e4e4c995.chunk.js","sourcesContent":["import React, { Component, memo} from \"react\";\r\nimport DataTable from 'react-data-table-component';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol, CForm, CFormInput, CFormLabel,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow\r\n} from \"@coreui/react\";\r\nimport {cilPencil} from \"@coreui/icons\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport ReactSwitch from \"../../components/react-switch/React-Switch\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass StoreManagementList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      edit: false,\r\n      add: false,\r\n    }\r\n    this.statusChange = false;\r\n  }\r\n\r\n  data = [\r\n    {\r\n      id: 1,\r\n      name: 'Beetlejuice',\r\n      storeStatus: 'Active',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Ghostbusters',\r\n      storeStatus: 'Active',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Energy Drink',\r\n      storeStatus: 'Active',\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Soft Drink',\r\n      storeStatus: 'Active',\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Pizza',\r\n      storeStatus: 'Active',\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Beverages',\r\n      storeStatus: 'Active',\r\n    },{\r\n      id: 7,\r\n      name: 'Main Course',\r\n      storeStatus: 'DeActive',\r\n    },{\r\n      id: 8,\r\n      name: 'Ghostbusters',\r\n      storeStatus: 'DeActive',\r\n    },{\r\n      id: 9,\r\n      name: 'Ghostbusters',\r\n      storeStatus: 'Active',\r\n    },{\r\n      id: 10,\r\n      name: 'Ghostbusters',\r\n      storeStatus: 'Active',\r\n    },{\r\n      id: 11,\r\n      name: 'Ghostbusters',\r\n      storeStatus: 'DEActive',\r\n    },{\r\n      id: 12,\r\n      name: 'Ghostbusters',\r\n      storeStatus: 'Active',\r\n    },{\r\n      id: 13,\r\n      name: 'Ghostbusters',\r\n      storeStatus: 'DeActive',\r\n    },\r\n  ];\r\n\r\n  columns = [\r\n    {\r\n      name: 'Sr No.',\r\n      selector: row => row.id,\r\n    },\r\n    {\r\n      name: 'Store Name',\r\n      selector: row => row.name,\r\n    },\r\n    {\r\n      name: 'Store Status',\r\n      selector: row => row.storeStatus,\r\n    },\r\n    {\r\n      name: 'Action',\r\n      selector: row => {\r\n        return (\r\n          <>\r\n            <Link to={\"/store-management/edit\"} className=\"btn btn-primary text-white btn-sm\"><CIcon icon={cilPencil} className=\"cursor-pointer\"/></Link>\r\n            <ReactSwitch/>\r\n          </>\r\n        )\r\n      }\r\n    }\r\n  ];\r\n\r\n\r\n  onClose = (addEdit) => {\r\n    this.setState({\r\n      visible: !this.state.visible,\r\n      add: false,\r\n      edit: false,\r\n    });\r\n    if (addEdit !== '' && addEdit === 'edit') {\r\n      this.setState({\r\n        add: false,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        add: true,\r\n        edit: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <section className=\"category-section\">\r\n        <CRow>\r\n          <CCol xs={12}>\r\n            <CCard className=\"mb-4\">\r\n              <CCardHeader>\r\n                <strong>Store Management</strong>\r\n                <div className=\"float-end\">\r\n                  <Link to={\"/store-management/add\"} className=\"btn text-white btn-primary btn-sm\">Add New</Link>\r\n                </div>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <DataTable\r\n                  pagination\r\n                  columns={this.columns}\r\n                  data={this.data}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n        <CModal visible={this.state.visible} onClose={() => this.onClose('close')}>\r\n          <CModalHeader>\r\n            <CModalTitle>{this.state.add ? 'Add' : 'Edit'} Category</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <CForm>\r\n              <div className=\"mb-3\">\r\n                <CFormLabel htmlFor=\"CName\">Category Name</CFormLabel>\r\n                <CFormInput type=\"text\" id=\"CName\" placeholder=\"Enter Category Name\" required/>\r\n              </div>\r\n            </CForm>\r\n          </CModalBody>\r\n          <CModalFooter>\r\n            <CButton color=\"success\" className=\"btn-sm\" onClick={() => this.onClose('save')}>{this.state.add ? 'Add' : 'Save'} </CButton>\r\n          </CModalFooter>\r\n        </CModal>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default memo(StoreManagementList);\r\n"],"sourceRoot":""}